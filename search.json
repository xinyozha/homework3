[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 homework3 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/my-vignette.html","id":"basic-command","dir":"Articles","previous_headings":"","what":"Basic command","title":"my-vignette","text":"fit linear regression model using ‘homework3’ package, generally two input needs prepared formula: formula linear regression y ~ x1 + x2. data: dataset want analyses. parameters needed my_confint: my_confint, parameter level needed: level: numerical value, significance CI, default = 0.95.","code":""},{"path":"/articles/my-vignette.html","id":"loading-packages","dir":"Articles","previous_headings":"","what":"Loading packages","title":"my-vignette","text":"","code":"library(homework3)"},{"path":"/articles/my-vignette.html","id":"set-some-data-example-and-the-result-of-statslm-in-r-and-my-linear-regression-","dir":"Articles","previous_headings":"","what":"Set some data example and the result of stats::lm in R and my linear regression.","title":"my-vignette","text":"","code":"data <- mtcars formula <- mpg ~ disp + hp m1 <- lm(formula, data) s_m1 <- summary(m1) m2 <- my_lm(formula, data)"},{"path":"/articles/my-vignette.html","id":"some-examples-of-using-my_lm-function-and-my_confint-function-","dir":"Articles","previous_headings":"","what":"Some examples of using my_lm function and my_confint function.","title":"my-vignette","text":"*(1) Calculate coefficients: *(2) Calculate residuals: *(3) Calculate estimate value: *(4) Calculate sigma square: *(5) Calculate R squared: *(6) Calculate Confidence Interval: *(7) Calculate F statistic: Using items .","code":"my_lm(formula, data)$coefficients #>      (Intercept)        disp          hp #> [1,]     30.7359 -0.03034628 -0.02484008 my_lm(formula, data)$residuals #>                           [,1] #> Mazda RX4           -2.1480911 #> Mazda RX4 Wag       -2.1480911 #> Datsun 710          -2.3483788 #> Hornet 4 Drive       1.2258440 #> Hornet Sportabout    3.2357695 #> Valiant             -3.1997835 #> Duster 360           0.5745752 #> Merc 240D           -0.3440204 #> Merc 230            -1.3033408 #> Merc 280            -3.3945383 #> Merc 280C           -4.7945383 #> Merc 450SE          -1.4951865 #> Merc 450SL          -0.5951865 #> Merc 450SLC         -2.6951865 #> Cadillac Fleetwood  -0.9202450 #> Lincoln Continental -1.0359995 #> Chrysler Imperial    3.0296761 #> Fiat 128             5.6917931 #> Honda Civic          3.2529931 #> Toyota Corolla       6.9363213 #> Toyota Corona       -3.1818286 #> Dodge Challenger    -1.8597761 #> AMC Javelin         -2.5846240 #> Camaro Z28          -0.7288875 #> Pontiac Firebird     4.9496206 #> Fiat X1-9            0.6008970 #> Porsche 914-2        1.1752002 #> Lotus Europa         5.3569558 #> Ford Pantera L       2.2734203 #> Ferrari Dino        -2.2886799 #> Maserati Bora        1.7197522 #> Volvo 142E          -2.9564359 my_lm(formula, data)$fitted.values #>                         [,1] #> Mazda RX4           23.14809 #> Mazda RX4 Wag       23.14809 #> Datsun 710          25.14838 #> Hornet 4 Drive      20.17416 #> Hornet Sportabout   15.46423 #> Valiant             21.29978 #> Duster 360          13.72542 #> Merc 240D           24.74402 #> Merc 230            24.10334 #> Merc 280            22.59454 #> Merc 280C           22.59454 #> Merc 450SE          17.89519 #> Merc 450SL          17.89519 #> Merc 450SLC         17.89519 #> Cadillac Fleetwood  11.32025 #> Lincoln Continental 11.43600 #> Chrysler Imperial   11.67032 #> Fiat 128            26.70821 #> Honda Civic         27.14701 #> Toyota Corolla      26.96368 #> Toyota Corona       24.68183 #> Dodge Challenger    17.35978 #> AMC Javelin         17.78462 #> Camaro Z28          14.02889 #> Pontiac Firebird    14.25038 #> Fiat X1-9           26.69910 #> Porsche 914-2       24.82480 #> Lotus Europa        25.04304 #> Ford Pantera L      13.52658 #> Ferrari Dino        21.98868 #> Maserati Bora       13.28025 #> Volvo 142E          24.35644 my_lm(formula, data)$mse #> [1] 9.775636 my_lm(formula, data)$rsquared #> [1] 0.7482402 CI = my_confint(formula, data, 0.95) ff <- c(   my_lm(formula, data)$F_stat, my_lm(formula, data)$df1,   my_lm(formula, data)$df2 )"},{"path":"/articles/my-vignette.html","id":"correctness","dir":"Articles","previous_headings":"","what":"Correctness","title":"my-vignette","text":"(1)Test coefficients. (2)Test residuals (3)Test fitted values (4)Test MSE (5)Test R square adj_R square (6)Test CI (7)Test F statistic Testing items .","code":"all.equal(as.numeric(my_lm(formula, data)$coefficients),            as.numeric(m1$coefficients)) #> [1] TRUE all.equal(as.numeric(my_lm(formula, data)$residuals),            as.numeric(m1$residuals)) #> [1] TRUE all.equal(as.numeric(my_lm(formula, data)$fitted.values),            as.numeric(m1$fitted.values)) #> [1] TRUE all.equal(as.numeric(my_lm(formula, data)$mse),            as.numeric(s_m1$sigma^2)) #> [1] TRUE all.equal(as.numeric(my_lm(formula, data)$rsquared),            as.numeric(s_m1$r.squared)) #> [1] TRUE all.equal(as.numeric(my_lm(formula, data)$adj_rsquared),            as.numeric(s_m1$adj.r.squared)) #> [1] TRUE all.equal(as.numeric(my_confint(formula, data, 0.95)),            as.numeric(confint(m1))) #> [1] TRUE all.equal(ff, as.numeric(s_m1$fstatistic)) #> [1] TRUE"},{"path":"/articles/my-vignette.html","id":"efficiency","dir":"Articles","previous_headings":"Correctness","what":"Efficiency","title":"my-vignette","text":"Compare itr_per_sec stats::lm R linear regression my_lm function using bench:mark() function (coefficients): results bench::mark, can seen my_lm 1.261 times faster stats:lm. Next, comparing speed constructing confidence interval my_confint: results bench::mark, can seen my_confint 83.0199 times faster stats:lm.","code":"code_efficiency_comparison_lm <- bench::mark(\"homework3::my_lm()\" = {   beta_actual <- m2$coefficients   as.vector(beta_actual) }, \"lm\" = {   beta_expected <- m1$coefficients   as.vector(beta_expected) }) summary(code_efficiency_comparison_lm) #> # A tibble: 2 × 6 #>   expression              min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>         <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 homework3::my_lm()   1.15µs   1.31µs   715802.        0B     71.6 #> 2 lm                   1.48µs   1.67µs   567669.        0B     56.8 itr_per_sec <- as.numeric(code_efficiency_comparison_lm[[4]]) itr_per_sec_ratio <- itr_per_sec[1] / itr_per_sec[2] code_efficiency_comparison_CI <- bench::mark(\"homework3::my_confint()\" = {   unname(CI_actual <- CI) }, \"confint\" = {   unname(CI_expected <- confint(m1)) }) summary(code_efficiency_comparison_CI) #> # A tibble: 2 × 6 #>   expression                   min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>              <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 homework3::my_confint()   1.79µs   2.01µs   473171.        0B    47.3  #> 2 confint                 157.21µs 164.27µs     5699.    1.19KB     9.41 itr_per_sec <- as.numeric(code_efficiency_comparison_CI[[4]]) itr_per_sec_ratio <- itr_per_sec[1] / itr_per_sec[2]"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xinyu Zhang. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xinyu (2023). homework3: lm. R package version 0.2.0.","code":"@Manual{,   title = {homework3: lm},   author = {{Xinyu}},   year = {2023},   note = {R package version 0.2.0}, }"},{"path":"/index.html","id":"linear-regression","dir":"","previous_headings":"","what":"lm","title":"lm","text":"goal R package set Linear regression function (my_lm) find basic information point estimate, fitted.values, residuals, mse, rsquared, adj_rsquared, standard error beta, t.statistic, p.value, F.statistic, df1 df2. normal function R :stats::lm answer one line code. Additionally, set function my_confint get CI.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"lm","text":"can install development version homework3 (Linear regression) GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"xinyozha/homework3\")"},{"path":"/index.html","id":"loading-packages","dir":"","previous_headings":"","what":"Loading packages","title":"lm","text":"can find details tutorial “homework3” package (Linear regression) Vignettes folder use following code:","code":"library(homework3) browseVignettes(\"homework3\") #> starting httpd help server ... done"},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"lm","text":"can use following code view help page Linear regression function:","code":"?my_lm ?my_confint"},{"path":"/reference/my_confint.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval — my_confint","title":"Confidence Interval — my_confint","text":"Confidence Interval","code":""},{"path":"/reference/my_confint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval — my_confint","text":"","code":"my_confint(formula, data, level = 0.95)"},{"path":"/reference/my_confint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval — my_confint","text":"formula input formula y ~ x1 + x2 data input data mtcars level numerical value, significance CI, default = 0.95","code":""},{"path":"/reference/my_confint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval — my_confint","text":"upper lower bounds confidence interval: CI_matrix","code":""},{"path":"/reference/my_confint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval — my_confint","text":"","code":"data <- mtcars formula <- mpg ~ disp + hp my_confint(formula, data, level = 0.95) #>                   lower        upper #> (Intercept) 28.01254573 33.459262767 #> disp        -0.04549091 -0.015201645 #> hp          -0.05221650  0.002536338"},{"path":"/reference/my_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply Linear Regression — my_lm","title":"Multiply Linear Regression — my_lm","text":"Multiply Linear Regression","code":""},{"path":"/reference/my_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply Linear Regression — my_lm","text":"","code":"my_lm(formula, data)"},{"path":"/reference/my_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply Linear Regression — my_lm","text":"formula input formula y ~ x1 + x2 data input data mtcars","code":""},{"path":"/reference/my_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply Linear Regression — my_lm","text":"List containing following elements beta estimates(coefficients) fitted_values residuals mse rsquared adj_rsquared SE t p.value F_stat df1 df2 CI","code":""},{"path":"/reference/my_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiply Linear Regression — my_lm","text":"","code":"data <- mtcars formula <- mpg ~ disp + hp my_lm(formula, data) #> $coefficients #>      (Intercept)        disp          hp #> [1,]     30.7359 -0.03034628 -0.02484008 #>  #> $fitted.values #>                         [,1] #> Mazda RX4           23.14809 #> Mazda RX4 Wag       23.14809 #> Datsun 710          25.14838 #> Hornet 4 Drive      20.17416 #> Hornet Sportabout   15.46423 #> Valiant             21.29978 #> Duster 360          13.72542 #> Merc 240D           24.74402 #> Merc 230            24.10334 #> Merc 280            22.59454 #> Merc 280C           22.59454 #> Merc 450SE          17.89519 #> Merc 450SL          17.89519 #> Merc 450SLC         17.89519 #> Cadillac Fleetwood  11.32025 #> Lincoln Continental 11.43600 #> Chrysler Imperial   11.67032 #> Fiat 128            26.70821 #> Honda Civic         27.14701 #> Toyota Corolla      26.96368 #> Toyota Corona       24.68183 #> Dodge Challenger    17.35978 #> AMC Javelin         17.78462 #> Camaro Z28          14.02889 #> Pontiac Firebird    14.25038 #> Fiat X1-9           26.69910 #> Porsche 914-2       24.82480 #> Lotus Europa        25.04304 #> Ford Pantera L      13.52658 #> Ferrari Dino        21.98868 #> Maserati Bora       13.28025 #> Volvo 142E          24.35644 #>  #> $residuals #>                           [,1] #> Mazda RX4           -2.1480911 #> Mazda RX4 Wag       -2.1480911 #> Datsun 710          -2.3483788 #> Hornet 4 Drive       1.2258440 #> Hornet Sportabout    3.2357695 #> Valiant             -3.1997835 #> Duster 360           0.5745752 #> Merc 240D           -0.3440204 #> Merc 230            -1.3033408 #> Merc 280            -3.3945383 #> Merc 280C           -4.7945383 #> Merc 450SE          -1.4951865 #> Merc 450SL          -0.5951865 #> Merc 450SLC         -2.6951865 #> Cadillac Fleetwood  -0.9202450 #> Lincoln Continental -1.0359995 #> Chrysler Imperial    3.0296761 #> Fiat 128             5.6917931 #> Honda Civic          3.2529931 #> Toyota Corolla       6.9363213 #> Toyota Corona       -3.1818286 #> Dodge Challenger    -1.8597761 #> AMC Javelin         -2.5846240 #> Camaro Z28          -0.7288875 #> Pontiac Firebird     4.9496206 #> Fiat X1-9            0.6008970 #> Porsche 914-2        1.1752002 #> Lotus Europa         5.3569558 #> Ford Pantera L       2.2734203 #> Ferrari Dino        -2.2886799 #> Maserati Bora        1.7197522 #> Volvo 142E          -2.9564359 #>  #> $mse #> [1] 9.775636 #>  #> $rsquared #> [1] 0.7482402 #>  #> $adj_rsquared #> [1] 0.7308774 #>  #> $SE #> (Intercept)        disp          hp  #> 1.331566129 0.007404856 0.013385499  #>  #> $t_value #> [1] 23.082522 -4.098159 -1.855746 #>  #> $p.value #> [1] 0.0000000000 0.0003062678 0.0736790529 #>  #> $F_stat #> [1] 43.09458 #>  #> $df1 #> [1] 2 #>  #> $df2 #> [1] 29 #>"},{"path":"/news/index.html","id":"homework3-020","dir":"Changelog","previous_headings":"","what":"homework3 0.2.0","title":"homework3 0.2.0","text":"Initial CRAN submission.","code":""}]
